<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<http use-expressions="true" create-session="never" auto-config="true">
		<remember-me />
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/home" access="permitAll" />
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/**/*.png" access="permitAll" />
		<intercept-url pattern="/**/*.css" access="permitAll" />
		<intercept-url pattern="/secure/extreme/**" access="hasRole('supervisor')" />
		<intercept-url pattern="/secure/**" access="isAuthenticated()" />
		<intercept-url pattern="/**" access="denyAll" />
		<!-- the login page is a wicket page mounted in WicketApplication.init() -->
		<form-login login-page="/login" />
	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<user-service>
				<user name="rod" password="koala" authorities="supervisor, teller, user" />
				<user name="dianne" password="emu" authorities="teller, user" />
				<user name="scott" password="wombat" authorities="user" />
				<user name="peter" password="opal" authorities="user" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

	<!-- This filter is responsible for storing the SecurityContextHolder between 
		requests. Also see SecureWebSession.authenticate(). -->
	<beans:bean id="securityContextPersistenceFilter"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter" />

</beans:beans> 